export const contentMultiTabVue2And3 = [
  {
    language: 'mdx',
    renderer: 'angular',
    raw: "{/* Button.stories.mdx*/}\n\nimport { Meta, Story } from '@storybook/addon-docs';\n\nimport { Button } from './button.component';\n\n<Meta title=\"Button\" component={Button} />\n\n{/* 👇 We create a “template” of how args map to rendering */}\nexport const Template = (args) => ({ props: args });\n\n{/* 👇 Each story then reuses that template */}\n<Story\n  name=\"Primary\"\n  args={{\n    primary: true,\n    label: 'Button',\n  }} >\n  {Template.bind({})}\n</Story>",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="md" data-theme="one-dark-pro Firefox Light"><code data-language="md" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* Button.stories.mdx*/}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import { Meta, Story } from \'@storybook/addon-docs\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import { Button } from \'./button.component\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Meta title="Button" component={Button} /></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 We create a “template” of how args map to rendering */}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">export const Template = (args) => ({ props: args });</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 Each story then reuses that template */}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Story</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  name="Primary"</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  args={{</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    primary: true,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    label: \'Button\',</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  }} ></span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  {Template.bind({})}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;/Story></span></span></code></pre></figure>',
  },
  {
    language: 'ts',
    filename: 'Button.stories.ts',
    renderer: 'angular',
    raw: "import { Meta, Story } from '@storybook/angular/';\n\nimport { Button } from './button.component';\n\nexport default {\n  /* 👇 The title prop is optional.\n  * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n} as Meta;\n\n//👇 We create a “template” of how args map to rendering\nconst Template: Story = (args) => ({\n  props: args,\n});\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\n\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="ts" data-theme="one-dark-pro Firefox Light"><code data-language="ts" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Meta</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">Story</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'@storybook/angular/\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./button.component\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> as</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Meta</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Story</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> ({</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  props</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'js',
    filename: 'Button.stories.js',
    renderer: 'html',
    raw: "export default {\n  /* 👇 The title prop is optional.\n   * See https://storybook.js.org/docs/html/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'Button',\n};\n\n//👇 We create a “template” of how args map to rendering\nconst Template = (args) => {\n  const btn = document.createElement('button');\n  btn.innerText = args.label;\n\n  const mode = args.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  btn.className = ['storybook-button', 'storybook-button--medium', mode].join(' ');\n\n  return btn;\n};\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="js" data-theme="one-dark-pro Firefox Light"><code data-language="js" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">   * See https://storybook.js.org/docs/html/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">   * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">   */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> btn</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> document</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">createElement</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">(</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\'button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">  btn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">innerText</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> mode</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">primary</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> ?</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'storybook-button--primary\'</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> :</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'storybook-button--secondary\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">  btn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">className</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> [</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\'storybook-button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\'storybook-button--medium\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">mode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">].</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">join</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">(</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\' \'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  return</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> btn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'ts',
    filename: 'Button.stories.ts',
    renderer: 'html',
    raw: "import { Meta, StoryFn } from '@storybook/html';\n\ntype ButtonArgs = {\n  primary: boolean;\n  label: string;\n}\n\nexport default {\n  /* 👇 The title prop is optional.\n   * See https://storybook.js.org/docs/html/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'Button',\n} as Meta<ButtonArgs>;\n\n//👇 We create a “template” of how args map to rendering\nconst Template: StoryFn<ButtonArgs> = (args): HTMLButtonElement => {\n  const btn = document.createElement('button');\n  btn.innerText = args.label;\n\n  const mode = args.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  btn.className = ['storybook-button', 'storybook-button--medium', mode].join(' ');\n\n  return btn;\n};\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="ts" data-theme="one-dark-pro Firefox Light"><code data-language="ts" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Meta</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">StoryFn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'@storybook/html\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">type</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> ButtonArgs</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> boolean</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> string</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">   * See https://storybook.js.org/docs/html/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">   * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">   */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> as</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Meta</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">&#x3C;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8">ButtonArgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">>;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> StoryFn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">&#x3C;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8">ButtonArgs</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> HTMLButtonElement</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> btn</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> document</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">createElement</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">(</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\'button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">  btn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">innerText</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> mode</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">primary</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> ?</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'storybook-button--primary\'</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> :</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'storybook-button--secondary\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">  btn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">className</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> [</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\'storybook-button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\'storybook-button--medium\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">mode</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">].</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">join</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">(</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">\' \'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  return</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> btn</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'js',
    filename: 'Button.stories.js|jsx',
    renderer: 'preact',
    raw: "/** @jsx h */\nimport { h } from 'preact';\n\nimport { Button } from './Button';\n\nexport default {\n  /* 👇 The title prop is optional.\n  * See https://storybook.js.org/docs/preact/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n}\n//👇 We create a “template” of how args map to rendering\nconst Template = (args) => <Button {...args} />;\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="js" data-theme="one-dark-pro Firefox Light"><code data-language="js" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">/** </span><span style="--shiki-dark:#C678DD;--shiki-light:#4A4A4F;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">@</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">jsx</span><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit"> h */</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> h</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'preact\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * See https://storybook.js.org/docs/preact/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676"> &#x3C;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Button</span><span style="--shiki-dark:#C678DD;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">...</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">args</span><span style="--shiki-dark:#C678DD;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676"> /></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'js',
    filename: 'Button.stories.js|jsx',
    renderer: 'react',
    raw: "import React from 'react';\n\nimport { Button } from './Button';\n\nexport default {\n  /* 👇 The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n};\n\n//👇 We create a “template” of how args map to rendering\nconst Template = (args) => <Button {...args} />;\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n   primary: true,\n   label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="js" data-theme="one-dark-pro Firefox Light"><code data-language="js" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> React</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'react\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676"> &#x3C;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Button</span><span style="--shiki-dark:#C678DD;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">...</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">args</span><span style="--shiki-dark:#C678DD;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676"> /></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">   primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">   label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'mdx',
    renderer: 'react',
    raw: "{/* Button.stories.mdx*/}\n\nimport { Meta, Story } from '@storybook/addon-docs';\n\nimport { Button } from './Button';\n\n<Meta title=\"Button\" component={Button} />\n\n{/* 👇 We create a “template” of how args map to rendering */}\n\nexport const Template = (args) => <Button {...args} />;\n\n{/* 👇 Each story then reuses that template */}\n<Story\n  name=\"Primary\"\n  args={{\n    primary: true,\n    label: 'Button',\n  }}>\n  {Template.bind({})}\n</Story>",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="md" data-theme="one-dark-pro Firefox Light"><code data-language="md" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* Button.stories.mdx*/}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import { Meta, Story } from \'@storybook/addon-docs\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import { Button } from \'./Button\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Meta title="Button" component={Button} /></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 We create a “template” of how args map to rendering */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">export const Template = (args) => &#x3C;Button {...args} />;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 Each story then reuses that template */}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Story</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  name="Primary"</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  args={{</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    primary: true,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    label: \'Button\',</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  }}></span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  {Template.bind({})}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;/Story></span></span></code></pre></figure>',
  },
  {
    language: 'ts',
    filename: 'Button.stories.ts|tsx',
    renderer: 'react',
    raw: "import React from 'react';\n\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { Button, ButtonProps } from './Button';\n\nexport default {\n  /* 👇 The title prop is optional.\n  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n} as ComponentMeta<typeof Button>;\n\n//👇 We create a “template” of how args map to rendering\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});\n\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="ts" data-theme="one-dark-pro Firefox Light"><code data-language="ts" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> React</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'react\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> ComponentStory</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">ComponentMeta</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'@storybook/react\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">ButtonProps</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * See https://storybook.js.org/docs/react/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> as</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> ComponentMeta</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">&#x3C;</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">typeof</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">>;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> ComponentStory</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">&#x3C;</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">typeof</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">> </span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F">=</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393"> &#x3C;</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8">Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#DD00A9">...</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393"> />;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'js',
    filename: 'Button.stories.js',
    renderer: 'svelte',
    raw: "import Button from './Button.svelte';\n\nexport default {\n  /* 👇 The title prop is optional.\n  * See https://storybook.js.org/docs/svelte/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n};\n\n// 👇 We create a “template” of how args map to rendering\nconst Template = (args)=>({\n  component: Button,\n  props: args,\n});\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="js" data-theme="one-dark-pro Firefox Light"><code data-language="js" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./Button.svelte\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * See https://storybook.js.org/docs/svelte/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">// 👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">=></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  props</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'mdx',
    renderer: 'svelte',
    raw: "{/* Button.stories.mdx */}\n\nimport { Meta, Story } from '@storybook/addon-docs';\n\nimport Button from './Button.svelte';\n\n<Meta title=\"Button\" component={Button} />\n\n{/* 👇 We create a “template” of how args map to rendering */}\n\nexport const Template = (args) => ({\n  Component: Button,\n  props: args,\n});\n\n{/* 👇 Each story then reuses that template */}\n<Story\n  name=\"Primary\"\n  args={{\n    primary: true,\n    label: 'Button',\n  }}>\n  {Template.bind({})}\n</Story>",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="md" data-theme="one-dark-pro Firefox Light"><code data-language="md" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* Button.stories.mdx */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import { Meta, Story } from \'@storybook/addon-docs\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import Button from \'./Button.svelte\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Meta title="Button" component={Button} /></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 We create a “template” of how args map to rendering */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">export const Template = (args) => ({</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  Component: Button,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  props: args,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">});</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 Each story then reuses that template */}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Story</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  name="Primary"</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  args={{</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    primary: true,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    label: \'Button\',</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  }}></span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  {Template.bind({})}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;/Story></span></span></code></pre></figure>',
  },
  {
    language: 'ts',
    renderer: 'svelte',
    tabTitle: 'native-format',
    raw: "{/* Button.stories.svelte */}\n\n<script>\n  import { Meta, Template, Story } from '@storybook/addon-svelte-csf';\n  \n  import Button from './Button.svelte';\n</script>\n\n<Meta\n  title=\"Button\"\n  component={Button}\n  argTypes={{\n    label: { control: 'text' },\n    primary: { control: 'boolean' },\n  }}\n/>\n\n{/*👇 We create a “template” of how args map to rendering */}\n\n<Template let:args>\n  <Button {...args} />\n</Template>\n\n{/* 👇 Each story then reuses that template */}\n\n<Story\n  name='Primary'\n  args={{\n    primary: true,\n    label: 'Button'\n  }}\n/>",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="html" data-theme="one-dark-pro Firefox Light"><code data-language="html" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">{/* Button.stories.svelte */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">&#x3C;</span><span style="--shiki-dark:#E06C75;--shiki-light:#8000D7">script</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">></span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Meta</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">Story</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'@storybook/addon-svelte-csf\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">  </span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">  import</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./Button.svelte\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">&#x3C;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#8000D7">script</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">&#x3C;</span><span style="--shiki-dark:#E06C75;--shiki-light:#8000D7">Meta</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">=</span><span style="--shiki-dark:#98C379;--shiki-light:#D9DBDF">"</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">Button</span><span style="--shiki-dark:#98C379;--shiki-light:#D9DBDF">"</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">=</span><span style="--shiki-dark:#98C379;--shiki-light:#4A4A4F">{Button}</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">  argTypes</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">=</span><span style="--shiki-dark:#98C379;--shiki-light:#4A4A4F">{{</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">    label:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> {</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> control:</span><span style="--shiki-dark:#FFFFFF;--shiki-light:#939393"> \'text\'</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> },</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">    primary:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> {</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> control:</span><span style="--shiki-dark:#FFFFFF;--shiki-light:#939393"> \'boolean\'</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> },</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">  }}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">/></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">{/*👇 We create a “template” of how args map to rendering */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">&#x3C;</span><span style="--shiki-dark:#E06C75;--shiki-light:#8000D7">Template</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> let:args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">></span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">  &#x3C;</span><span style="--shiki-dark:#E06C75;--shiki-light:#8000D7">Button</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> {...args}</span><span style="--shiki-dark:#FFFFFF;--shiki-light:#939393"> /</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">></span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">&#x3C;/</span><span style="--shiki-dark:#E06C75;--shiki-light:#8000D7">Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">{/* 👇 Each story then reuses that template */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">&#x3C;</span><span style="--shiki-dark:#E06C75;--shiki-light:#8000D7">Story</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">  name</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">=</span><span style="--shiki-dark:#98C379;--shiki-light:#D9DBDF">\'</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">Primary</span><span style="--shiki-dark:#98C379;--shiki-light:#D9DBDF">\'</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">  args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">=</span><span style="--shiki-dark:#98C379;--shiki-light:#4A4A4F">{{</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">    primary:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true,</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">    label:</span><span style="--shiki-dark:#FFFFFF;--shiki-light:#939393"> \'Button\'</span></span>\n<span data-line=""><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9">  }}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#767676">/></span></span></code></pre></figure>',
  },
  {
    language: 'js',
    filename: 'Button.stories.js',
    renderer: 'vue',
    tabTitle: '2',
    raw: "import Button from './Button.vue';\n\nexport default {\n  /* 👇 The title prop is optional.\n  * See https://storybook.js.org/docs/vue/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n};\n\n// 👇 We create a “template” of how args map to rendering\nconst Template = (args, { argTypes }) => ({\n  props: Object.keys(argTypes),\n  components: { Button },\n});\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\n\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="js" data-theme="one-dark-pro Firefox Light"><code data-language="js" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./Button.vue\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * See https://storybook.js.org/docs/vue/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">// 👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, { </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">argTypes</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393"> }</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> ({</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  props</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Object</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">keys</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">(</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">argTypes</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  components</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'js',
    filename: 'Button.stories.js',
    renderer: 'vue',
    tabTitle: '3',
    raw: "import Button from './Button.vue';\n\nexport default {\n  /* 👇 The title prop is optional.\n  * See https://storybook.js.org/docs/vue/configure/overview#configure-story-loading\n  * to learn how to generate automatic titles\n  */\n  title: 'Button',\n  component: Button,\n};\n\n//👇 We create a “template” of how args map to rendering\nconst Template = (args) => ({\n  components: { Button },\n  setup() {\n    //👇 The args will now be passed down to the template\n    return { args };\n  },\n  template: '<Button v-bind=\"args\" />',\n});\n\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="js" data-theme="one-dark-pro Firefox Light"><code data-language="js" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./Button.vue\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  /* 👇 The title prop is optional.</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * See https://storybook.js.org/docs/vue/configure/overview#configure-story-loading</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  * to learn how to generate automatic titles</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">  */</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  component</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> ({</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  components</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> Button</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">  setup</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">()</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">    //👇 The args will now be passed down to the template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">    return</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> args</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  }</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'&#x3C;Button v-bind="args" />\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
  {
    language: 'mdx',
    renderer: 'vue',
    tabTitle: 'mdx-2',
    raw: '{/* Button.stories.mdx*/}\n\nimport { Meta, Story } from \'@storybook/addon-docs\';\n\nimport Button from \'./Button.vue\';\n\n<Meta title="Button" component={Button} />\n\n{/* 👇 We create a “template” of how args map to rendering */}\n\nexport const Template = (args, { argTypes }) => ({\n  props: Object.keys(argTypes),\n  components: { Button },\n  template: `<Button v-bind="$props" v-on="$props" />`,\n});\n\n{/* 👇 Each story then reuses that template */}\n<Story\n  name="Primary"\n  args={{\n    primary: true,\n    label: \'Button\',\n  }}>\n  {Template.bind({})}\n</Story>',
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="md" data-theme="one-dark-pro Firefox Light"><code data-language="md" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* Button.stories.mdx*/}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import { Meta, Story } from \'@storybook/addon-docs\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import Button from \'./Button.vue\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Meta title="Button" component={Button} /></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 We create a “template” of how args map to rendering */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">export const Template = (args, { argTypes }) => ({</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  props: Object.keys(argTypes),</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  components: { Button },</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  template: </span><span style="--shiki-dark:#E5C07B;--shiki-light:#058B00">`</span><span style="--shiki-dark:#98C379;--shiki-light:#058B00">&#x3C;Button v-bind="$props" v-on="$props" /></span><span style="--shiki-dark:#E5C07B;--shiki-light:#058B00">`</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">});</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 Each story then reuses that template */}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Story</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  name="Primary"</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  args={{</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    primary: true,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    label: \'Button\',</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  }}></span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  {Template.bind({})}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;/Story></span></span></code></pre></figure>',
  },
  {
    language: 'mdx',
    renderer: 'vue',
    tabTitle: 'mdx-3',
    raw: '{/* Button.stories.mdx*/}\n\nimport { Meta, Story } from "@storybook/addon-docs";\n\nimport Button from \'./Button.vue\';\n\n<Meta title="Button" component={Button}/>\n\n{/* 👇 We create a “template” of how args map to rendering */}\n\nexport const Template = (args) => ({\n  components: { Button },\n  setup() {\n    return { args };\n  },\n  template: \'<Button v-bind="args" />\',\n});\n\n<Story\n  name="Primary"\n  args={{\n    primary: true,\n    label: \'Button\',\n  }}>\n  {Template.bind({})}\n</Story>',
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="md" data-theme="one-dark-pro Firefox Light"><code data-language="md" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* Button.stories.mdx*/}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import { Meta, Story } from "@storybook/addon-docs";</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">import Button from \'./Button.vue\';</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Meta title="Button" component={Button}/></span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">{/* 👇 We create a “template” of how args map to rendering */}</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">export const Template = (args) => ({</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  components: { Button },</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  setup() {</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    return { args };</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  },</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  template: \'&#x3C;Button v-bind="args" />\',</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">});</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;Story</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  name="Primary"</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  args={{</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    primary: true,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">    label: \'Button\',</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  }}></span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">  {Template.bind({})}</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">&#x3C;/Story></span></span></code></pre></figure>',
  },
  {
    language: 'js',
    filename: 'demo-button.stories.js',
    renderer: 'web-components',
    raw: "import { html } from 'lit-html';\n\nimport './demo-button';\n\nexport default {\n  title: 'Button',\n};\n\n//👇 We create a “template” of how args map to rendering\nconst Template = ({ primary, label }) =>\n  html`<demo-button ?primary=${primary} .label=${label}></demo-button>`;\n\n//👇 Each story then reuses that template\nexport const Primary = Template.bind({});\n\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};",
    content:
      '<figure data-rehype-pretty-code-figure=""><pre class="Firefox Light" style="--shiki-dark:#abb2bf;--shiki-light:#939393;--shiki-dark-bg:#0F172A;--shiki-light-bg:#FFFFFF" tabindex="0" data-language="js" data-theme="one-dark-pro Firefox Light"><code data-language="js" data-theme="one-dark-pro Firefox Light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8"> html</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> }</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> from</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'lit-html\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">import</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'./demo-button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> default</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  title</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 We create a “template” of how args map to rendering</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">const</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic"> Template</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> (</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">{ </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">, </span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393"> }</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">)</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> =></span></span>\n<span data-line=""><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">  html</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">`&#x3C;demo-button ?primary=</span><span style="--shiki-dark:#C678DD;--shiki-light:#003EAA">${</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">primary</span><span style="--shiki-dark:#C678DD;--shiki-light:#003EAA">}</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> .label=</span><span style="--shiki-dark:#C678DD;--shiki-light:#003EAA">${</span><span style="--shiki-dark:#E06C75;--shiki-light:#0074E8">label</span><span style="--shiki-dark:#C678DD;--shiki-light:#003EAA">}</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA">>&#x3C;/demo-button>`</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#7F848E;--shiki-light:#939393;--shiki-dark-font-style:italic;--shiki-light-font-style:inherit">//👇 Each story then reuses that template</span></span>\n<span data-line=""><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9">export</span><span style="--shiki-dark:#C678DD;--shiki-light:#DD00A9"> const</span><span style="--shiki-dark:#E5C07B;--shiki-light:#0074E8"> Primary</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7"> Template</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#61AFEF;--shiki-light:#058B00;--shiki-dark-font-style:inherit;--shiki-light-font-style:italic">bind</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">({})</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span>\n<span data-line=""> </span>\n<span data-line=""><span style="--shiki-dark:#E5C07B;--shiki-light:#8000D7">Primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">.</span><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">args</span><span style="--shiki-dark:#56B6C2;--shiki-light:#4A4A4F"> =</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F"> {</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  primary</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#D19A66;--shiki-light:#DD00A9"> true</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#E06C75;--shiki-light:#058B00">  label</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#058B00">:</span><span style="--shiki-dark:#98C379;--shiki-light:#003EAA"> \'Button\'</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">,</span></span>\n<span data-line=""><span style="--shiki-dark:#ABB2BF;--shiki-light:#4A4A4F">}</span><span style="--shiki-dark:#ABB2BF;--shiki-light:#939393">;</span></span></code></pre></figure>',
  },
];
